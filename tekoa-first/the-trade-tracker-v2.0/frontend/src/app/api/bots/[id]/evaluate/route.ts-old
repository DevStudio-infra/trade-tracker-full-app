import { NextRequest, NextResponse } from 'next/server';
import { getAuth } from '@clerk/nextjs/server';

// Helper function to fetch with authentication tokens on the server side
async function fetchWithAuthServer(url: string, options: RequestInit = {}) {
  // Add default headers
  const headers = {
    'Content-Type': 'application/json',
    ...options.headers,
  };
  
  return fetch(url, {
    ...options,
    headers,
    credentials: 'include',
  });
}

export async function POST(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const { userId } = getAuth(request);

    if (!userId) {
      return NextResponse.json(
        { error: 'Authentication required' },
        { status: 401 }
      );
    }

    const botId = params.id;
    
    // Call the backend service to evaluate the bot
    const response = await fetchWithAuthServer(
      `${process.env.BACKEND_URL}/bots/${botId}/evaluate`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId }),
      }
    );

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      console.error('Error evaluating bot:', errorData);
      return NextResponse.json(
        { error: errorData.message || 'Failed to evaluate bot' },
        { status: response.status }
      );
    }

    const data = await response.json();
    return NextResponse.json(data);
  } catch (error) {
    console.error('Error evaluating bot:', error);
    return NextResponse.json(
      { error: 'Failed to evaluate bot' },
      { status: 500 }
    );
  }
}
